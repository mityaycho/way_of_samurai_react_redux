{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/images/roller.jpg","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post.jsx","components/Profile/MyPosts/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","className","style","spanText","onDoubleClick","onChange","event","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","profile","error","onSubmit","onClick","styles","formSummaryError","createField","Input","type","Textarea","Object","keys","contacts","map","el","key","contact","ProfileData","isOwner","goToEditMode","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","Preloader","headerPhoto","descriptionBlock","src","photos","large","userPhoto","mainPhoto","e","target","files","length","initialValues","formData","then","Post","item","alt","message","likesCount","maxLength10","maxLengthCreator","Field","placeholder","name","component","validate","required","cols","rows","MyPosts","memo","postsElements","posts","id","postBlock","values","addPost","newPostText","post","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","withRouter"],"mappings":"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","file":"static/js/3.296fc256.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends  React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    };\r\n  };\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerPhoto\":\"ProfileInfo_headerPhoto__3Et2P\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__HzZQK\",\"spanText\":\"ProfileInfo_spanText__3ZIpC\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3E8EV\",\"contact\":\"ProfileInfo_contact__1TEoo\"};","module.exports = __webpack_public_path__ + \"static/media/roller.5d432515.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postBlock\":\"MyPosts_postBlock__3r8OO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1eweQ\"};","import React, {useState, useEffect} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect(() => {\r\n    setStatus(props.status);\r\n  }, [props.status]);\r\n\r\n  const activateEditMode = () => setEditMode(true);\r\n\r\n  const deactivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (event) => {\r\n    setStatus(event.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode &&\r\n      <div className={style.spanText}>\r\n        <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n      </div>}\r\n      {editMode &&\r\n      <div>\r\n        <input onChange={onStatusChange}\r\n               autoFocus={true}\r\n               onBlur={deactivateEditMode}\r\n               value={status}/>\r\n      </div>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport styles from \"../../common/FormsControls/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div><button onClick={() => {}}>Save</button></div>\r\n      {error && <div className={styles.formSummaryError}>{error}</div>}\r\n      <div>\r\n        <b>full name</b>: {createField(\"Full name\", \"fullName\", [], Input)}\r\n      </div>\r\n      <div>\r\n        <b>Looking for a job</b>: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n      </div>\r\n      <div>\r\n        <b>My professional skills</b>:\r\n        {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n      </div>\r\n      }\r\n      <div>\r\n        <b>About me</b>:\r\n        {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n      </div>\r\n      <div>\r\n        <b>Contacts</b>: {Object.keys(profile.contacts).map(el => {\r\n        return <div key={el} className={style.contact}>\r\n          <b>{el}: {createField(el, \"contacts.\" + el, [], Input)}</b>\r\n        </div>\r\n      })}\r\n      </div>\r\n    </form>\r\n  )\r\n};\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from \"react\";\r\nimport style from \"./ProfileInfo.module.css\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport userPhoto from \"../../../assets/images/roller.jpg\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader/>;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => setEditMode(false))\r\n  };\r\n\r\n  return (\r\n    <div className={style.headerPhoto}>\r\n      <div className={style.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={style.mainPhoto}/>\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected}/>}\r\n        {editMode ?\r\n          <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} /> :\r\n          <ProfileData goToEditMode={() => {setEditMode(true)}} profile={profile} isOwner={isOwner} />}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>Edit</button></div>}\r\n    <div>\r\n      <b>full name</b>: {profile.fullName}\r\n    </div>\r\n    <div>\r\n      <b>Looking for a job</b>: {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n    {profile.lookingForAJob &&\r\n    <div>\r\n      <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n    </div>\r\n    }\r\n    <div>\r\n      <b>About me</b>: {profile.aboutMe}\r\n    </div>\r\n    <div>\r\n      <b>Contacts</b>: {Object.keys(profile.contacts).map(el => {\r\n      return <Contact key={el} contactTitle={el} contactValue={profile.contacts[el]} />\r\n    })}\r\n    </div>\r\n  </div>\r\n};\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={style.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n};\r\n\r\nexport default ProfileInfo;","import React from \"react\";\r\nimport style from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={style.item}>\r\n      <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTeYatHjn3DBnwvvyHDdtNAx0-x0QUV7cG056KlBa1reeHp-F7v\" alt=\"\"/>\r\n      { props.message }\r\n      <div>\r\n        <span>like { props.likesCount }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst AddPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n          <Field\r\n            placeholder=\"Post message\"\r\n            name=\"newPostText\"\r\n            component={Textarea}\r\n            validate={[required, maxLength10]}\r\n            cols=\"30\" rows=\"1\" />\r\n      </div>\r\n      <div>\r\n        <button>Add post</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default reduxForm({form: \"profileAddNewPostForm\"})(AddPostForm);","import React from \"react\";\r\nimport style from \"./MyPosts.module.css\";\r\nimport Post from \"./Post\";\r\nimport AddPostForm from \"./AddPostForm/AddPostForm\";\r\n\r\nconst MyPosts = React.memo(props => {\r\n  let postsElements = props.posts.map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount} />);\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n  return (\r\n    <div className={style.postBlock}>\r\n      <h3>My posts</h3>\r\n      <AddPostForm onSubmit={onAddPost}/>\r\n      <div className={style.post}>\r\n        { postsElements }\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => dispatch(addPostActionCreator(newPostText))\r\n  };\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo isOwner={props.isOwner}\r\n                   profile={props.profile}\r\n                   status={props.status}\r\n                   updateStatus={props.updateStatus}\r\n                   savePhoto={props.savePhoto}\r\n                   saveProfile={props.saveProfile}\r\n      />\r\n      <MyPostsContainer/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <Profile {...this.props}\r\n                    isOwner={!this.props.match.params.userId}\r\n                    profile={this.props.profile}\r\n                    status={this.props.status}\r\n                    updateStatus={this.props.updateStatus}\r\n                    savePhoto={this.props.savePhoto}\r\n    />;\r\n  };\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n  withRouter, withAuthRedirect)(ProfileContainer);"],"sourceRoot":""}