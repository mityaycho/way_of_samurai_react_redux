{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","path","id","className","style","dialog","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","Dialogs","dialogsPage","dialogsElements","dialogs","map","el","key","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","dispatch","sendMessageCreator"],"mappings":"sMAIIA,EAA6B,SAACC,GAAD,MAAY,CAACC,OAAQD,EAAME,KAAKD,SAEpDE,EAAmB,SAACC,GAAe,IACxCC,EADuC,iLAGzC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHH,GACZC,IAAML,WAQvC,OAFqCM,YAAQX,EAARW,CAAoCL,K,oBCZ3EM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,SAAW,0BAA0B,QAAU,2B,oBCApGD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,6B,uICYhDC,EATI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,yBAAKC,UAAWC,IAAMC,QACpB,kBAAC,IAAD,CAASV,GAAIM,GAAOP,EAAMY,Q,kBCDjBC,EAJE,SAACb,GAChB,OAAO,yBAAKS,UAAWC,IAAMI,SAAUd,EAAMc,U,iCCCzCC,EAAcC,YAAiB,IAoBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAlBQ,SAACjB,GACtB,OACE,0BAAMmB,SAAUnB,EAAMoB,cACpB,6BACE,kBAACC,EAAA,EAAD,CACET,KAAK,iBACLU,YAAY,qBACZC,UAAWC,IACXC,SAAU,CAACC,IAAUX,MAGzB,6BACE,6CCSOY,EAtBC,SAAC3B,GACf,IAAIP,EAAQO,EAAM4B,YACdC,EAAkBpC,EAAMqC,QAAQC,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAAYpB,KAAMoB,EAAGpB,KAAMqB,IAAKD,EAAGxB,GAAIA,GAAIwB,EAAGxB,QACxF0B,EAAmBzC,EAAM0C,SAASJ,KAAI,SAAAC,GAAE,OAAI,kBAAC,EAAD,CAASlB,QAASkB,EAAGlB,QAASmB,IAAKD,EAAGxB,QAMtF,OACE,yBAAKC,UAAWC,IAAMoB,SACpB,yBAAKrB,UAAWC,IAAM0B,cACnBP,GAEH,yBAAKpB,UAAWC,IAAMyB,UACpB,6BAAMD,GACN,kBAAC,EAAD,CAAgBf,SAXF,SAACkB,GACnBrC,EAAMsC,YAAYD,EAAOE,sB,wBCGdC,sBAAQrC,aARD,SAACV,GAAD,MAAY,CAACmC,YAAanC,EAAMmC,gBAE7B,SAACa,GACxB,MAAO,CACLH,YAAa,SAACC,GAAD,OAAoBE,EAASC,YAAmBH,SAII3C,IAAtD4C,CAAwEb","file":"static/js/4.f92513f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({isAuth: state.auth.isAuth});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n  class RedirectComponent extends  React.Component {\r\n    render() {\r\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n      return <Component {...this.props} />;\r\n    };\r\n  };\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1Lteo\",\"messages\":\"Dialogs_messages__3rQSU\",\"message\":\"Dialogs_message__2LUL_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__1YDY-\",\"active\":\"DialogItem_active__2y1Uy\"};","import React from \"react\";\r\nimport style from \"./DialogItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  let path = \"/dialogs/\" + props.id;\r\n  return (\r\n    <div className={style.dialog}>\r\n      <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport style from \"./Message.module.css\";\r\n\r\nconst  Message = (props) => {\r\n  return <div className={style.message}>{props.message}</div>\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          name=\"newMessageBody\"\r\n          placeholder=\"Enter your message\"\r\n          component={Textarea}\r\n          validate={[required, maxLength50]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({form: \"dialogAddMassageForm\"})(AddMessageForm);","import React from \"react\";\r\nimport style from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n  let state = props.dialogsPage;\r\n  let dialogsElements = state.dialogs.map(el => <DialogItem name={el.name} key={el.id} id={el.id}/>);\r\n  let messagesElements = state.messages.map(el => <Message message={el.message} key={el.id}/>);\r\n\r\n  let addNewMessage = (values) => {\r\n    props.sendMessage(values.newMessageBody);\r\n  };\r\n\r\n  return (\r\n    <div className={style.dialogs}>\r\n      <div className={style.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={style.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageForm onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => ({dialogsPage: state.dialogsPage});\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => dispatch(sendMessageCreator(newMessageBody))\r\n  };\r\n};\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}